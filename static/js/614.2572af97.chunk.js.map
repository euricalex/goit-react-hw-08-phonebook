{"version":3,"file":"static/js/614.2572af97.chunk.js","mappings":"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","sources":["components/PhoneItem/StyledPhoneItem.js","components/PhoneItem/PhoneItem.js","components/PhoneList/PhoneList.js","components/ContactForm/StyledContactForm.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Counter.js","components/Message.js","pages/Contacts.js","redux/contacts/selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RemoveButton = styled.button`\n  padding: 10px 32px;\n  border-radius: 4px;\n  background-color: red;\n  color: white;\n  border-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 100px;\n  margin: auto;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`;","import { useDispatch } from 'react-redux';\nimport { RemoveButton } from './StyledPhoneItem';\nimport { fetchDeleteContact } from 'redux/contacts/operations';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport const PhoneItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  return (\n    <>\n      <NavLink to={`/contacts/${contact.id}`} state={{ from: location }}>\n        <div>\n          {contact.name}:{contact.number}\n        </div>\n        </NavLink>\n        <RemoveButton\n          value={contact.id}\n          onClick={() => {\n            dispatch(fetchDeleteContact(contact.id));\n          }}\n        >\n          Delete\n        </RemoveButton>\n      \n    </>\n  );\n};","import { useSelector } from 'react-redux';\nimport { PhoneItem } from '../PhoneItem/PhoneItem';\nimport { StyledItem, StyledList } from './StyledPhoneList';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\n\nexport const PhoneList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const getFiltered = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  const filteredContacts = getFiltered();\n  return (\n    <StyledList>\n      \n      {filteredContacts.map(contact => (\n        <StyledItem key={contact.id}>\n          <PhoneItem contact={contact} />\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  color: white;\n  \n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 10px auto;\n  align-items: center;\n \n`;\n\nexport const StyledFild = styled(Field)`\n  margin: auto;\n  padding: 4px;\n  border-radius: 4px;\n  text-align: center;\n`;\n\nexport const AddButton = styled.button`\n  padding: 16px 32px;\n  border-radius: 4px;\n  background-color: red;\n  color: white;\n  border-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 169px;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`;\n\nexport const Container = styled.div`\n  margin: auto;\n  width: 360px;\n  text-align: center;\n`;","import { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { StyledForm, StyledFild, AddButton } from './StyledContactForm';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchAddContact } from 'redux/contacts/operations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[A-Za-zА-Яа-яЁё\\s]+$/, 'Invalid name')\n    .required('This is required!')\n    .min(1, 'Too Short!')\n    .max(50, 'Too Long!'),\n  number: Yup.string()\n    .matches(/^\\+?[0-9]{1,3}-?[0-9]+$/, 'Invalid number')\n    .required('This is required!')\n    .min(6, 'Too Short!')\n    .max(20, 'Too Long!'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={schema}\n        onSubmit={(values, actions) => {\n          const checkName = values.name;\n\n          if (\n            contacts.some(\n              contact => contact.name.toLowerCase() === checkName.toLowerCase()\n            )\n          ) {\n            alert(`${checkName} already recorded in the directory`);\n            return;\n          }\n          dispatch(fetchAddContact({ ...values }));\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <label>\n            Name\n            <StyledFild name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </label>\n          <label>\n            Number\n            <StyledFild type=\"tel\" name=\"number\" />\n            <ErrorMessage name=\"number\" component=\"div\" />\n          </label>\n\n          <AddButton type=\"submit\">Add contact</AddButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { changeFilter} from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <input\n          onChange={e => dispatch(changeFilter(e.target.value))}\n          value={filter}\n        ></input>\n      </label>\n    </div>\n  );\n};","import { useSelector } from 'react-redux';\nimport { selectTotalContacts, selectVisibleContacts } from 'redux/contacts/selectors';\n\n\n\nexport default function CountOfContacts() {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const totalContacts = useSelector(selectTotalContacts);\n\n  return (\n    <>\n      <span>\n        <div>\n          Total contacts:<b> {totalContacts}</b>\n        </div>{' '}\n        <div>\n          Shown contacts:\n          <b> {visibleContacts.length}</b>\n        </div>\n      </span>\n    </>\n  );\n}","export default function Message({ message }) {\n    return (\n      <>\n        <b>{message}</b>\n      </>\n    );\n  }","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Toaster } from 'react-hot-toast';\nimport { PhoneList } from 'components/PhoneList/PhoneList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport CountOfContacts from 'components/Counter';\nimport { selectTotalContacts } from 'redux/contacts/selectors';\nimport Message from 'components/Message';\nimport { StyledContainer } from 'components/PhoneList/StyledPhoneList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contactsLength = useSelector(selectTotalContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledContainer>\n      <Helmet title=\"Your contacts\" />\n\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <CountOfContacts />\n      <Filter />\n      {contactsLength === 0 ? (\n        <Message message=\"Oops! Contact's list is empty...\" />\n      ) : (\n        <PhoneList />\n      )}\n\n      <Toaster />\n    </StyledContainer>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectTotalContacts = state => state.contacts.items.length;\n\nexport const selectContactsStatus = state => state.contacts.isLoading;\n\nexport const selectContactsError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterField) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterField.toLowerCase())\n    )\n);","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["RemoveButton","styled","_templateObject","_taggedTemplateLiteral","PhoneItem","_ref","contact","dispatch","useDispatch","location","useLocation","_jsxs","_Fragment","children","_jsx","NavLink","to","concat","id","state","from","name","number","value","onClick","fetchDeleteContact","PhoneList","contacts","useSelector","selectContacts","filter","selectFilter","filteredContacts","toLowerCase","includes","StyledList","map","StyledItem","StyledForm","Form","StyledFild","Field","_templateObject2","AddButton","_templateObject3","schema","_templateObject4","Yup","shape","matches","required","min","max","ContactForm","items","Formik","initialValues","validationSchema","onSubmit","values","actions","checkName","some","alert","fetchAddContact","_objectSpread","resetForm","ErrorMessage","component","type","Filter","onChange","e","changeFilter","target","CountOfContacts","visibleContacts","selectVisibleContacts","totalContacts","selectTotalContacts","length","Message","message","Contacts","contactsLength","useEffect","fetchContacts","StyledContainer","Helmet","title","Toaster","createSelector","filterField","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}