{"version":3,"file":"static/js/410.16ceb6b6.chunk.js","mappings":"0MAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4H,uJCIhCC,EAAaC,EAAAA,GAAW,CAC5BC,MAAOD,EAAAA,KAAaC,QAAQC,SAAS,kBACrCC,SAAUH,EAAAA,KAAaI,IAAI,GAAGF,SAAS,oBAG5BG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAIjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAJkB,CAAET,MAAO,GAAIE,SAAU,IAKzCQ,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,GAAC,CAAC,EAAIH,IAEtB,EAAEI,UAEFC,EAAAA,EAAAA,MAACxB,EAAAA,EAAU,CAACyB,aAAa,MAAKF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELT,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,YAAY,qBAC7Cf,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CAACF,KAAK,OAAOG,UAAU,UAEtCP,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELT,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLC,YAAY,yBAEdf,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CAACF,KAAK,WAAWG,UAAU,UAE1CjB,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAAQJ,SAAC,eAI9B,E,UCtCe,SAASS,IACtB,OACER,EAAAA,EAAAA,MAACS,EAAAA,GAAe,CAAAV,SAAA,EACdT,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,MAAM,WAEdrB,EAAAA,EAAAA,KAAA,MAAAS,SAAI,gBACJT,EAAAA,EAAAA,KAAA,MAAAS,SAAI,sCACJT,EAAAA,EAAAA,KAACH,EAAS,MAKhB,C","sources":["components/Login/StyledLogin.js","components/Login/Login.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport {  Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n \n  \n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 10px auto;\n  align-items: center;\n \n`;","import { ErrorMessage, Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/AuthOperations';\nimport { StyledForm } from './StyledLogin';\n\n\nconst formSchema = Yup.object({\n  email: Yup.string().email().required('Must be filled'),\n  password: Yup.string().min(8).required('Must be filled'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = { email: '', password: '' };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={formSchema}\n      onSubmit={(values, actions) => {\n        dispatch(logIn({ ...values }));\n        \n      }}\n    >\n      <StyledForm autoComplete=\"off\">\n        <label>\n          Email\n          <Field type=\"email\" name=\"email\" placeholder=\"Enter your name\" />\n          <ErrorMessage name=\"name\" component=\"b\" />\n        </label>\n        <label>\n          Password\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n          />\n          <ErrorMessage name=\"password\" component=\"b\" />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </StyledForm>\n    </Formik>\n  );\n};","import { Helmet } from 'react-helmet';\n\n\n\nimport { LoginForm } from 'components/Login/Login';\nimport { StyledContainer } from 'components/PhoneList/StyledPhoneList';\n\nexport default function Login() {\n  return (\n    <StyledContainer>\n      <Helmet title=\"Login\" />\n\n      <h2>Login Form</h2>\n      <h5>Please sign up and let's work!!!</h5>\n      <LoginForm />\n\n     \n    </StyledContainer>\n  );\n}"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","formSchema","Yup","email","required","password","min","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","_objectSpread","children","_jsxs","autoComplete","Field","type","name","placeholder","ErrorMessage","component","Login","StyledContainer","Helmet","title"],"sourceRoot":""}