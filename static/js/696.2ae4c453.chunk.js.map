{"version":3,"file":"static/js/696.2ae4c453.chunk.js","mappings":"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","sources":["components/Login/StyledLogin.js","pages/ContactEdit.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport {  Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n \n  \n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 10px auto;\n  align-items: center;\n \n`;","import { useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { RiArrowLeftCircleFill } from 'react-icons/ri';\nimport { fetchEditContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { toastLoading } from 'redux/contacts/contactsSlice';\nimport { StyledForm } from 'components/Login/StyledLogin';\nimport { StyledContainer } from 'components/PhoneList/StyledPhoneList';\n\n\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$/,\n      'Wrong name format'\n    )\n    .required('Must be filled'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Wrong number format'\n    )\n    .required('Must be filled'),\n});\n\nexport default function ContactEdit() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n  const { contactId } = useParams();\n  const allContacts = useSelector(selectContacts);\n  const currentContact = allContacts.find(contact => contact.id === contactId);\n\n  const initialValues = {\n    name: currentContact ? currentContact.name : '',\n    number: currentContact ? currentContact.number : '',\n  };\n\n  const handleSubmit = values => {\n    const updatedContact = {\n      name: values.name,\n      number: values.number,\n      contactId,\n    };\n\n    const editedName = values.name;\n    if (\n      allContacts.some(\n        contact => contact.name.toLowerCase() === editedName.toLowerCase()\n      )\n    ) {\n      toast.dismiss(toastLoading);\n      toast.success(\n        `Oops! ${editedName} is already exists!!! Please change it...`,\n        {\n          duration: 2000,\n          position: 'top-center',\n        }\n      );\n      return;\n    }\n\n    dispatch(fetchEditContact(updatedContact));\n    toast.dismiss(toastLoading);\n    toast.success(`Contact of ${updatedContact.name} is updated!`, {\n      duration: 2000,\n      position: 'top-center',\n    });\n    setTimeout(() => {\n      navigate(-1);\n    }, 2200);\n  };\n\n  return (\n    <StyledContainer>\n      <NavLink to={backLocationRef.current}>\n        <RiArrowLeftCircleFill /> Go back\n      </NavLink>\n\n      <div>\n        <Helmet title=\"Edit contact\" />\n\n        <h2>Let's edit your contact</h2>\n\n        <Formik\n          initialValues={initialValues}\n          validationSchema={formSchema}\n          onSubmit={handleSubmit}\n        >\n          <StyledForm>\n            <label>\n              Name\n              <Field\n                type=\"text\"\n                name=\"name\"\n                placeholder={`${currentContact.name}`}\n              />\n              <ErrorMessage name=\"name\" component=\"b\" />\n            </label>\n            <label>\n              Phone\n              <Field\n                type=\"tel\"\n                name=\"number\"\n                placeholder={`${currentContact.number}`}\n              />\n              <ErrorMessage name=\"number\" component=\"b\" />\n            </label>\n            <button type=\"submit\">Confirm changes</button>\n          </StyledForm>\n        </Formik>\n        <Toaster />\n      \n      </div>\n    </StyledContainer>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectTotalContacts = state => state.contacts.items.length;\n\nexport const selectContactsStatus = state => state.contacts.isLoading;\n\nexport const selectContactsError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterField) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterField.toLowerCase())\n    )\n);"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","formSchema","Yup","shape","name","matches","required","number","ContactEdit","_location$state$from","_location$state","dispatch","useDispatch","navigate","useNavigate","location","useLocation","backLocationRef","useRef","state","from","contactId","useParams","allContacts","useSelector","selectContacts","currentContact","find","contact","id","initialValues","_jsxs","StyledContainer","children","NavLink","to","current","_jsx","RiArrowLeftCircleFill","Helmet","title","Formik","validationSchema","onSubmit","values","updatedContact","editedName","some","toLowerCase","toast","toastLoading","concat","duration","position","fetchEditContact","setTimeout","Field","type","placeholder","ErrorMessage","component","Toaster","contacts","items","selectTotalContacts","length","selectFilter","filter","selectVisibleContacts","createSelector","filterField","includes"],"sourceRoot":""}